/*
===============================================================================================
Stored Procedure: Load Silver Layer (Bronze -> Silver)
===============================================================================================
Script Purpose:
   This stored procedure performs the ETL (Extract, Transform, Load) process to
   populate the 'silver' schema tables from the 'bronze' schema.

   Actions Performed:
   - Truncates Silver tables.
   - Inserts transformed and cleansed data from Bronze into Silver tables.

Parameters:
   None.
   This stored procedure does not accept any parameters or return any values.

Usage Example:
   EXEC Silver.load_silver;
===============================================================================================
*/




/*
   ============================================================================================
                                         ðŸ’¾ TRANSFORMATION SCRIPT
   ============================================================================================
   Description: ETL transformations from bronze (raw) to silver (cleansed) layer
   Modules: Customer Info, Product Info, Sales Data, Extra Attributes, Location, Categories
   ============================================================================================
*/


/* ============================================================================================
   1. CUSTOMER INFORMATION TRANSFORMATION â†’ silver.crm_cust_info
   ============================================================================================ */

CREATE OR ALTER PROCEDURE silver.load_silver AS
BEGIN
    DECLARE  @start_time DATETIME,
             @end_time DATETIME,
             @start_time_batch DATETIME,
             @end_time_batch DATETIME;

    BEGIN TRY
        SET @start_time_batch = GETDATE();
        PRINT '==========================================================';
        PRINT 'Loading Silver Layer';
        PRINT '==========================================================';

        /* ============================================================================================
           1. CUSTOMER INFORMATION TRANSFORMATION â†’ silver.crm_cust_info
           ============================================================================================ */
        SET @start_time = GETDATE();
        PRINT '>> Truncating Table: silver.crm_cust_info';
        TRUNCATE TABLE silver.crm_cust_info;

        PRINT '>> Inserting Data Into: silver.crm_cust_info';
        INSERT INTO silver.crm_cust_info (
            cst_id,
            cst_key,
            cst_firstname,
            cst_lastname,
            cst_martial_status,
            cst_gndr,
            cst_create_date
        )
        SELECT
            cst_id,
            cst_key,
            TRIM(cst_firstname),
            TRIM(cst_lastname),
            CASE
                WHEN UPPER(TRIM(cst_martial_status)) = 'S' THEN 'SINGLE'
                WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'MARRIED'
                ELSE 'NA'
            END,
            CASE
                WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'FEMALE'
                WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'MALE'
                ELSE 'NA'
            END,
            cst_create_date
        FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date) AS flag_last
            FROM bronze.crm_cust_info
        ) T;

        SET @end_time = GETDATE();
        PRINT 'Time taken to load silver.crm_cust_info: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';

        /* ============================================================================================
           2. PRODUCT INFORMATION TRANSFORMATION â†’ silver.crm_prd_info
           ============================================================================================ */
        SET @start_time = GETDATE();
        IF OBJECT_ID('silver.crm_prd_info', 'U') IS NOT NULL
            DROP TABLE silver.crm_prd_info;

        CREATE TABLE silver.crm_prd_info (
            prd_id           INT,
            cat_id           NVARCHAR(50),
            prd_key          NVARCHAR(50),
            prd_nm           NVARCHAR(50),
            prd_cost         INT,
            prd_line         NVARCHAR(50),
            prd_start_dt     DATE,
            prd_end_dt       DATE,
            dwh_create_date  DATETIME2 DEFAULT GETDATE()
        );

        PRINT '>> Truncating Table: silver.crm_prd_info';
        TRUNCATE TABLE silver.crm_prd_info;

        PRINT '>> Inserting Data Into: silver.crm_prd_info';
        INSERT INTO silver.crm_prd_info (
            prd_id, cat_id, prd_key, prd_nm, prd_cost, prd_line, prd_start_dt, prd_end_dt
        )
        SELECT
            prd_id,
            REPLACE(SUBSTRING(prd_key, 1, 5), '-', '_'),
            SUBSTRING(prd_key, 7, LEN(prd_key)),
            prd_nm,
            ISNULL(prd_cost, 0),
            CASE UPPER(TRIM(prd_line))
                WHEN 'M' THEN 'Mountain'
                WHEN 'R' THEN 'Road'
                WHEN 'S' THEN 'Other Sales'
                WHEN 'T' THEN 'Touring'
                ELSE 'NA'
            END,
            CAST(prd_start_dt AS DATE),
            CAST(LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt) - 1 AS DATE)
        FROM bronze.crm_prd_info;

        SET @end_time = GETDATE();
        PRINT 'Time taken to load silver.crm_prd_info: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';

        /* ============================================================================================
           3. SALES DETAILS TRANSFORMATION â†’ silver.crm_sales_details
           ============================================================================================ */
        SET @start_time = GETDATE();
        PRINT '>> Truncating Table: silver.crm_sales_details';
        TRUNCATE TABLE silver.crm_sales_details;

        PRINT '>> Inserting Data Into: silver.crm_sales_details';
        INSERT INTO silver.crm_sales_details (
            sls_ord_num, sls_ord_key, sls_cust_id, sls_ord_dt,
            sls_ship_dt, sls_due_dt, sls_sales, sls_quantity, sls_price
        )
        SELECT 
            sls_ord_num,
            sls_ord_key,
            sls_cust_id,
            CASE WHEN sls_ord_dt = '0' OR LEN(sls_ord_dt) <> 8 THEN NULL ELSE CAST(CAST(sls_ord_dt AS VARCHAR) AS DATE) END,
            CASE WHEN sls_ship_dt = '0' OR LEN(sls_ship_dt) <> 8 THEN NULL ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE) END,
            CASE WHEN sls_due_dt = '0' OR LEN(sls_due_dt) <> 8 THEN NULL ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE) END,
            CASE WHEN sls_sales IS NULL OR sls_sales <= 0 OR sls_sales != sls_quantity * ABS(sls_price)
                 THEN sls_quantity * ABS(sls_price)
                 ELSE sls_sales END,
            sls_quantity,
            CASE WHEN sls_price IS NULL OR sls_price <= 0 THEN sls_sales / NULLIF(sls_quantity, 0) ELSE sls_price END
        FROM bronze.crm_sales_details;

        SET @end_time = GETDATE();
        PRINT 'Time taken to load silver.crm_sales_details: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';

        /* ============================================================================================
           4. CUSTOMER EXTRA ATTRIBUTES TRANSFORMATION â†’ silver.erp_cust_az12
           ============================================================================================ */
        SET @start_time = GETDATE();
        PRINT '>> Truncating Table: silver.erp_cust_az12';
        TRUNCATE TABLE silver.erp_cust_az12;

        PRINT '>> Inserting Data Into: silver.erp_cust_az12';
        INSERT INTO silver.erp_cust_az12 (cid, bdate, gen)
        SELECT
            CASE WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid, 4, LEN(cid)) ELSE cid END,
            CASE WHEN bdate > GETDATE() THEN NULL ELSE bdate END,
            CASE
                WHEN UPPER(TRIM(gen)) IN ('F', 'FEMALE') THEN 'FEMALE'
                WHEN UPPER(TRIM(gen)) IN ('M', 'MALE') THEN 'MALE'
                ELSE 'NA'
            END
        FROM bronze.erp_cust_az12;

        SET @end_time = GETDATE();
        PRINT 'Time taken to load silver.erp_cust_az12: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';

        /* ============================================================================================
           5. LOCATION DATA TRANSFORMATION â†’ silver.erp_loc_a101
           ============================================================================================ */
        SET @start_time = GETDATE();
        PRINT '>> Truncating Table: silver.erp_loc_a101';
        TRUNCATE TABLE silver.erp_loc_a101;

        PRINT '>> Inserting Data Into: silver.erp_loc_a101';
        INSERT INTO silver.erp_loc_a101 (cid, cntry)
        SELECT
            REPLACE(cid, '-', ''),
            CASE
                WHEN TRIM(cntry) = 'DE' THEN 'Germany'
                WHEN TRIM(cntry) IN ('US', 'USA') THEN 'United States'
                WHEN TRIM(cntry) = '' OR cntry IS NULL THEN 'NA'
                ELSE TRIM(cntry)
            END
        FROM bronze.erp_loc_a101;

        SET @end_time = GETDATE();
        PRINT 'Time taken to load silver.erp_loc_a101: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';

        /* ============================================================================================
           6. PRODUCT CATEGORY TRANSFORMATION â†’ silver.erp_px_cat_g1v2
           ============================================================================================ */
        SET @start_time = GETDATE();
        PRINT '>> Truncating Table: silver.erp_px_cat_g1v2';
        TRUNCATE TABLE silver.erp_px_cat_g1v2;

        PRINT '>> Inserting Data Into: silver.erp_px_cat_g1v2';
        INSERT INTO silver.erp_px_cat_g1v2 (id, cat, subcat, maintenance)
        SELECT id, cat, subcat, maintenance FROM bronze.erp_px_cat_g1v2;

        SET @end_time = GETDATE();
        PRINT 'Time taken to load silver.erp_px_cat_g1v2: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';

        SET @end_time_batch = GETDATE();
        PRINT '==========================================================';
        PRINT 'Total Time taken for Silver Layer: ' + CAST(DATEDIFF(SECOND, @start_time_batch, @end_time_batch) AS NVARCHAR) + ' seconds';
        PRINT '==========================================================';
    END TRY
    BEGIN CATCH
        PRINT '==========================================================';
        PRINT 'Error occurred while loading Silver Layer';
        PRINT '==========================================================';
        PRINT 'Error Number: ' + CAST(ERROR_NUMBER() AS NVARCHAR);
        PRINT 'Error Message: ' + ERROR_MESSAGE();
        PRINT 'Error Severity: ' + CAST(ERROR_SEVERITY() AS NVARCHAR);
        PRINT 'Error State: ' + CAST(ERROR_STATE() AS NVARCHAR);
    END CATCH
END;
